{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\ALEX\\\\Desktop\\\\PROYECTOS VSCODE\\\\crud-socket\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\ALEX\\\\Desktop\\\\PROYECTOS VSCODE\\\\crud-socket\",\"filename\":\"C:\\\\Users\\\\ALEX\\\\Desktop\\\\PROYECTOS VSCODE\\\\crud-socket\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\ALEX\\\\Desktop\\\\PROYECTOS VSCODE\\\\crud-socket\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\ALEX\\Desktop\\PROYECTOS VSCODE\\crud-socket\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\ALEX\\Desktop\\PROYECTOS VSCODE\\crud-socket",
      "filename": "C:\\Users\\ALEX\\Desktop\\PROYECTOS VSCODE\\crud-socket\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\ALEX\\Desktop\\PROYECTOS VSCODE\\crud-socket",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\ALEX\\Desktop\\PROYECTOS VSCODE\\crud-socket\\src\\index.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\ALEX\\Desktop\\PROYECTOS VSCODE\\crud-socket\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\ALEX\\Desktop\\PROYECTOS VSCODE\\crud-socket\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _socket = require(\"socket.io\");\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _uuid = require(\"uuid\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar notes = [];\nvar app = (0, _express[\"default\"])();\n\nvar server = _http[\"default\"].createServer(app);\n\nvar io = new _socket.Server(server); // app.get('/', (req, res) => {\n//     res.send('hola mundoddd')\n// })\n\napp.use(_express[\"default\"][\"static\"](__dirname + '/public'));\nio.on('connection', function (socket) {\n  console.log('nueva conexion : ', socket.id);\n  socket.emit('server:loadnotes', notes);\n  socket.on('client:newnote', function (newnote) {\n    var note = _objectSpread(_objectSpread({}, newnote), {}, {\n      id: (0, _uuid.v4)()\n    });\n\n    notes.push(note);\n    io.emit('server:newnote', note);\n  });\n  socket.on('client:deletenote', function (noteId) {\n    notes = notes.filter(function (note) {\n      return note.id !== noteId;\n    });\n    io.emit('server:loadnotes', notes);\n  });\n  socket.on('client:getnote', function (noteId) {\n    var note = notes.find(function (note) {\n      return note.id === noteId;\n    });\n    socket.emit('server:selectedNote', note);\n  });\n  socket.on('client:updateNote', function (updateNote) {\n    // console.log(note);\n    notes = notes.map(function (note) {\n      if (note.id === updateNote.id) {\n        note.title = updateNote.title;\n        note.description = updateNote.description;\n      }\n\n      return note;\n    });\n    io.emit('server:loadnotes', notes);\n  });\n}); // app.listen(3000)\n\nserver.listen(3000);\nconsole.log('server on port', 3000);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm5vdGVzIiwiYXBwIiwic2VydmVyIiwiaHR0cCIsImNyZWF0ZVNlcnZlciIsImlvIiwid2ViU29ja2V0U2VydmVyIiwidXNlIiwiZXhwcmVzcyIsIl9fZGlybmFtZSIsIm9uIiwic29ja2V0IiwiY29uc29sZSIsImxvZyIsImlkIiwiZW1pdCIsIm5ld25vdGUiLCJub3RlIiwicHVzaCIsIm5vdGVJZCIsImZpbHRlciIsImZpbmQiLCJ1cGRhdGVOb3RlIiwibWFwIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7OztBQUVBLElBQUlBLEtBQUssR0FBRyxFQUFaO0FBRUEsSUFBTUMsR0FBRyxHQUFHLDBCQUFaOztBQUNBLElBQU1DLE1BQU0sR0FBR0MsaUJBQUtDLFlBQUwsQ0FBa0JILEdBQWxCLENBQWY7O0FBQ0EsSUFBTUksRUFBRSxHQUFHLElBQUlDLGNBQUosQ0FBb0JKLE1BQXBCLENBQVgsQyxDQUVBO0FBQ0E7QUFDQTs7QUFDQUQsR0FBRyxDQUFDTSxHQUFKLENBQVFDLDhCQUFlQyxTQUFTLEdBQUcsU0FBM0IsQ0FBUjtBQUVBSixFQUFFLENBQUNLLEVBQUgsQ0FBTSxZQUFOLEVBQW9CLFVBQUNDLE1BQUQsRUFBWTtBQUM1QkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksbUJBQVosRUFBaUNGLE1BQU0sQ0FBQ0csRUFBeEM7QUFFQUgsRUFBQUEsTUFBTSxDQUFDSSxJQUFQLENBQVksa0JBQVosRUFBZ0NmLEtBQWhDO0FBRUFXLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLGdCQUFWLEVBQTRCLFVBQUFNLE9BQU8sRUFBSTtBQUNuQyxRQUFNQyxJQUFJLG1DQUFRRCxPQUFSO0FBQWlCRixNQUFBQSxFQUFFLEVBQUU7QUFBckIsTUFBVjs7QUFFQWQsSUFBQUEsS0FBSyxDQUFDa0IsSUFBTixDQUFXRCxJQUFYO0FBQ0FaLElBQUFBLEVBQUUsQ0FBQ1UsSUFBSCxDQUFRLGdCQUFSLEVBQTBCRSxJQUExQjtBQUNILEdBTEQ7QUFPQU4sRUFBQUEsTUFBTSxDQUFDRCxFQUFQLENBQVUsbUJBQVYsRUFBK0IsVUFBQ1MsTUFBRCxFQUFZO0FBQ3ZDbkIsSUFBQUEsS0FBSyxHQUFHQSxLQUFLLENBQUNvQixNQUFOLENBQWEsVUFBQ0gsSUFBRDtBQUFBLGFBQVVBLElBQUksQ0FBQ0gsRUFBTCxLQUFZSyxNQUF0QjtBQUFBLEtBQWIsQ0FBUjtBQUNBZCxJQUFBQSxFQUFFLENBQUNVLElBQUgsQ0FBUSxrQkFBUixFQUE0QmYsS0FBNUI7QUFDSCxHQUhEO0FBS0FXLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLGdCQUFWLEVBQTRCLFVBQUFTLE1BQU0sRUFBSTtBQUNsQyxRQUFNRixJQUFJLEdBQUdqQixLQUFLLENBQUNxQixJQUFOLENBQVcsVUFBQUosSUFBSTtBQUFBLGFBQUlBLElBQUksQ0FBQ0gsRUFBTCxLQUFZSyxNQUFoQjtBQUFBLEtBQWYsQ0FBYjtBQUNBUixJQUFBQSxNQUFNLENBQUNJLElBQVAsQ0FBWSxxQkFBWixFQUFtQ0UsSUFBbkM7QUFDSCxHQUhEO0FBTUFOLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLG1CQUFWLEVBQStCLFVBQUFZLFVBQVUsRUFBSTtBQUN6QztBQUNBdEIsSUFBQUEsS0FBSyxHQUFHQSxLQUFLLENBQUN1QixHQUFOLENBQVUsVUFBQU4sSUFBSSxFQUFJO0FBQ3RCLFVBQUlBLElBQUksQ0FBQ0gsRUFBTCxLQUFZUSxVQUFVLENBQUNSLEVBQTNCLEVBQStCO0FBQzNCRyxRQUFBQSxJQUFJLENBQUNPLEtBQUwsR0FBYUYsVUFBVSxDQUFDRSxLQUF4QjtBQUNBUCxRQUFBQSxJQUFJLENBQUNRLFdBQUwsR0FBbUJILFVBQVUsQ0FBQ0csV0FBOUI7QUFDSDs7QUFDRCxhQUFPUixJQUFQO0FBQ0gsS0FOTyxDQUFSO0FBT0FaLElBQUFBLEVBQUUsQ0FBQ1UsSUFBSCxDQUFRLGtCQUFSLEVBQTRCZixLQUE1QjtBQUNILEdBVkQ7QUFXSCxDQWxDRCxFLENBcUNBOztBQUNBRSxNQUFNLENBQUN3QixNQUFQLENBQWMsSUFBZDtBQUNBZCxPQUFPLENBQUNDLEdBQVIsQ0FBWSxnQkFBWixFQUE4QixJQUE5QiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFMRVhcXERlc2t0b3BcXFBST1lFQ1RPUyBWU0NPREVcXGNydWQtc29ja2V0XFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgeyBTZXJ2ZXIgYXMgd2ViU29ja2V0U2VydmVyIH0gZnJvbSBcInNvY2tldC5pb1wiO1xyXG5pbXBvcnQgaHR0cCBmcm9tICdodHRwJ1xyXG5pbXBvcnQgeyB2NCBhcyB1dWlkIH0gZnJvbSBcInV1aWRcIjtcclxuXHJcbmxldCBub3RlcyA9IFtdO1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpXHJcbmNvbnN0IHNlcnZlciA9IGh0dHAuY3JlYXRlU2VydmVyKGFwcClcclxuY29uc3QgaW8gPSBuZXcgd2ViU29ja2V0U2VydmVyKHNlcnZlcilcclxuXHJcbi8vIGFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcclxuLy8gICAgIHJlcy5zZW5kKCdob2xhIG11bmRvZGRkJylcclxuLy8gfSlcclxuYXBwLnVzZShleHByZXNzLnN0YXRpYyhfX2Rpcm5hbWUgKyAnL3B1YmxpYycpKVxyXG5cclxuaW8ub24oJ2Nvbm5lY3Rpb24nLCAoc29ja2V0KSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZygnbnVldmEgY29uZXhpb24gOiAnLCBzb2NrZXQuaWQpO1xyXG5cclxuICAgIHNvY2tldC5lbWl0KCdzZXJ2ZXI6bG9hZG5vdGVzJywgbm90ZXMpXHJcblxyXG4gICAgc29ja2V0Lm9uKCdjbGllbnQ6bmV3bm90ZScsIG5ld25vdGUgPT4ge1xyXG4gICAgICAgIGNvbnN0IG5vdGUgPSB7IC4uLm5ld25vdGUsIGlkOiB1dWlkKCkgfVxyXG5cclxuICAgICAgICBub3Rlcy5wdXNoKG5vdGUpO1xyXG4gICAgICAgIGlvLmVtaXQoJ3NlcnZlcjpuZXdub3RlJywgbm90ZSlcclxuICAgIH0pO1xyXG5cclxuICAgIHNvY2tldC5vbignY2xpZW50OmRlbGV0ZW5vdGUnLCAobm90ZUlkKSA9PiB7XHJcbiAgICAgICAgbm90ZXMgPSBub3Rlcy5maWx0ZXIoKG5vdGUpID0+IG5vdGUuaWQgIT09IG5vdGVJZCk7XHJcbiAgICAgICAgaW8uZW1pdCgnc2VydmVyOmxvYWRub3RlcycsIG5vdGVzKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHNvY2tldC5vbignY2xpZW50OmdldG5vdGUnLCBub3RlSWQgPT4ge1xyXG4gICAgICAgIGNvbnN0IG5vdGUgPSBub3Rlcy5maW5kKG5vdGUgPT4gbm90ZS5pZCA9PT0gbm90ZUlkKTtcclxuICAgICAgICBzb2NrZXQuZW1pdCgnc2VydmVyOnNlbGVjdGVkTm90ZScsIG5vdGUpO1xyXG4gICAgfSk7XHJcblxyXG5cclxuICAgIHNvY2tldC5vbignY2xpZW50OnVwZGF0ZU5vdGUnLCB1cGRhdGVOb3RlID0+IHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhub3RlKTtcclxuICAgICAgICBub3RlcyA9IG5vdGVzLm1hcChub3RlID0+IHtcclxuICAgICAgICAgICAgaWYgKG5vdGUuaWQgPT09IHVwZGF0ZU5vdGUuaWQpIHtcclxuICAgICAgICAgICAgICAgIG5vdGUudGl0bGUgPSB1cGRhdGVOb3RlLnRpdGxlO1xyXG4gICAgICAgICAgICAgICAgbm90ZS5kZXNjcmlwdGlvbiA9IHVwZGF0ZU5vdGUuZGVzY3JpcHRpb247XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIG5vdGVcclxuICAgICAgICB9KTtcclxuICAgICAgICBpby5lbWl0KCdzZXJ2ZXI6bG9hZG5vdGVzJywgbm90ZXMpO1xyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuXHJcbi8vIGFwcC5saXN0ZW4oMzAwMClcclxuc2VydmVyLmxpc3RlbigzMDAwKVxyXG5jb25zb2xlLmxvZygnc2VydmVyIG9uIHBvcnQnLCAzMDAwKTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "notes",
        "app",
        "server",
        "http",
        "createServer",
        "io",
        "webSocketServer",
        "use",
        "express",
        "__dirname",
        "on",
        "socket",
        "console",
        "log",
        "id",
        "emit",
        "newnote",
        "note",
        "push",
        "noteId",
        "filter",
        "find",
        "updateNote",
        "map",
        "title",
        "description",
        "listen"
      ],
      "mappings": ";;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAIA,KAAK,GAAG,EAAZ;AAEA,IAAMC,GAAG,GAAG,0BAAZ;;AACA,IAAMC,MAAM,GAAGC,iBAAKC,YAAL,CAAkBH,GAAlB,CAAf;;AACA,IAAMI,EAAE,GAAG,IAAIC,cAAJ,CAAoBJ,MAApB,CAAX,C,CAEA;AACA;AACA;;AACAD,GAAG,CAACM,GAAJ,CAAQC,8BAAeC,SAAS,GAAG,SAA3B,CAAR;AAEAJ,EAAE,CAACK,EAAH,CAAM,YAAN,EAAoB,UAACC,MAAD,EAAY;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,MAAM,CAACG,EAAxC;AAEAH,EAAAA,MAAM,CAACI,IAAP,CAAY,kBAAZ,EAAgCf,KAAhC;AAEAW,EAAAA,MAAM,CAACD,EAAP,CAAU,gBAAV,EAA4B,UAAAM,OAAO,EAAI;AACnC,QAAMC,IAAI,mCAAQD,OAAR;AAAiBF,MAAAA,EAAE,EAAE;AAArB,MAAV;;AAEAd,IAAAA,KAAK,CAACkB,IAAN,CAAWD,IAAX;AACAZ,IAAAA,EAAE,CAACU,IAAH,CAAQ,gBAAR,EAA0BE,IAA1B;AACH,GALD;AAOAN,EAAAA,MAAM,CAACD,EAAP,CAAU,mBAAV,EAA+B,UAACS,MAAD,EAAY;AACvCnB,IAAAA,KAAK,GAAGA,KAAK,CAACoB,MAAN,CAAa,UAACH,IAAD;AAAA,aAAUA,IAAI,CAACH,EAAL,KAAYK,MAAtB;AAAA,KAAb,CAAR;AACAd,IAAAA,EAAE,CAACU,IAAH,CAAQ,kBAAR,EAA4Bf,KAA5B;AACH,GAHD;AAKAW,EAAAA,MAAM,CAACD,EAAP,CAAU,gBAAV,EAA4B,UAAAS,MAAM,EAAI;AAClC,QAAMF,IAAI,GAAGjB,KAAK,CAACqB,IAAN,CAAW,UAAAJ,IAAI;AAAA,aAAIA,IAAI,CAACH,EAAL,KAAYK,MAAhB;AAAA,KAAf,CAAb;AACAR,IAAAA,MAAM,CAACI,IAAP,CAAY,qBAAZ,EAAmCE,IAAnC;AACH,GAHD;AAMAN,EAAAA,MAAM,CAACD,EAAP,CAAU,mBAAV,EAA+B,UAAAY,UAAU,EAAI;AACzC;AACAtB,IAAAA,KAAK,GAAGA,KAAK,CAACuB,GAAN,CAAU,UAAAN,IAAI,EAAI;AACtB,UAAIA,IAAI,CAACH,EAAL,KAAYQ,UAAU,CAACR,EAA3B,EAA+B;AAC3BG,QAAAA,IAAI,CAACO,KAAL,GAAaF,UAAU,CAACE,KAAxB;AACAP,QAAAA,IAAI,CAACQ,WAAL,GAAmBH,UAAU,CAACG,WAA9B;AACH;;AACD,aAAOR,IAAP;AACH,KANO,CAAR;AAOAZ,IAAAA,EAAE,CAACU,IAAH,CAAQ,kBAAR,EAA4Bf,KAA5B;AACH,GAVD;AAWH,CAlCD,E,CAqCA;;AACAE,MAAM,CAACwB,MAAP,CAAc,IAAd;AACAd,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,IAA9B",
      "sourceRoot": "C:\\Users\\ALEX\\Desktop\\PROYECTOS VSCODE\\crud-socket\\src\\",
      "sourcesContent": [
        "\r\nimport express from \"express\";\r\nimport { Server as webSocketServer } from \"socket.io\";\r\nimport http from 'http'\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nlet notes = [];\r\n\r\nconst app = express()\r\nconst server = http.createServer(app)\r\nconst io = new webSocketServer(server)\r\n\r\n// app.get('/', (req, res) => {\r\n//     res.send('hola mundoddd')\r\n// })\r\napp.use(express.static(__dirname + '/public'))\r\n\r\nio.on('connection', (socket) => {\r\n    console.log('nueva conexion : ', socket.id);\r\n\r\n    socket.emit('server:loadnotes', notes)\r\n\r\n    socket.on('client:newnote', newnote => {\r\n        const note = { ...newnote, id: uuid() }\r\n\r\n        notes.push(note);\r\n        io.emit('server:newnote', note)\r\n    });\r\n\r\n    socket.on('client:deletenote', (noteId) => {\r\n        notes = notes.filter((note) => note.id !== noteId);\r\n        io.emit('server:loadnotes', notes);\r\n    });\r\n\r\n    socket.on('client:getnote', noteId => {\r\n        const note = notes.find(note => note.id === noteId);\r\n        socket.emit('server:selectedNote', note);\r\n    });\r\n\r\n\r\n    socket.on('client:updateNote', updateNote => {\r\n        // console.log(note);\r\n        notes = notes.map(note => {\r\n            if (note.id === updateNote.id) {\r\n                note.title = updateNote.title;\r\n                note.description = updateNote.description;\r\n            }\r\n            return note\r\n        });\r\n        io.emit('server:loadnotes', notes);\r\n    });\r\n});\r\n\r\n\r\n// app.listen(3000)\r\nserver.listen(3000)\r\nconsole.log('server on port', 3000);"
      ]
    },
    "sourceType": "script",
    "mtime": 1634362565262
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\xampp\\\\htdocs\\\\crud-socket\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\xampp\\\\htdocs\\\\crud-socket\",\"filename\":\"C:\\\\xampp\\\\htdocs\\\\crud-socket\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\xampp\\\\htdocs\\\\crud-socket\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\xampp\\htdocs\\crud-socket\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\xampp\\htdocs\\crud-socket",
      "filename": "C:\\xampp\\htdocs\\crud-socket\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\xampp\\htdocs\\crud-socket",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\xampp\\htdocs\\crud-socket\\src\\index.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\xampp\\htdocs\\crud-socket\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\xampp\\htdocs\\crud-socket\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _socket = require(\"socket.io\");\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _uuid = require(\"uuid\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar notes = [];\nvar app = (0, _express[\"default\"])();\n\nvar server = _http[\"default\"].createServer(app);\n\nvar io = new _socket.Server(server); // app.get('/', (req, res) => {\n//     res.send('hola mundoddd')\n// })\n\napp.use(_express[\"default\"][\"static\"](__dirname + '/public'));\nio.on('connection', function (socket) {\n  console.log('nueva conexion : ', socket.id);\n  socket.emit('server:loadnotes', notes);\n  socket.on('client:newnote', function (newnote) {\n    var note = _objectSpread(_objectSpread({}, newnote), {}, {\n      id: (0, _uuid.v4)()\n    });\n\n    notes.push(note);\n    io.emit('server:newnote', note);\n  });\n  socket.on('client:deletenote', function (noteId) {\n    notes = notes.filter(function (note) {\n      return note.id !== noteId;\n    });\n    io.emit('server:loadnotes', notes);\n  });\n  socket.on('client:getnote', function (noteId) {\n    var note = notes.find(function (note) {\n      return note.id === noteId;\n    });\n    socket.emit('server:selectedNote', note);\n  });\n  socket.on('client:updateNote', function (updateNote) {\n    // console.log(note);\n    notes = notes.map(function (note) {\n      if (note.id === updateNote.id) {\n        note.title = updateNote.title;\n        note.description = updateNote.description;\n      }\n\n      return note;\n    });\n    io.emit('server:loadnotes', notes);\n  });\n}); // app.listen(3000)\n\nserver.listen(3000);\nconsole.log('server on port', 3000);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm5vdGVzIiwiYXBwIiwic2VydmVyIiwiaHR0cCIsImNyZWF0ZVNlcnZlciIsImlvIiwid2ViU29ja2V0U2VydmVyIiwidXNlIiwiZXhwcmVzcyIsIl9fZGlybmFtZSIsIm9uIiwic29ja2V0IiwiY29uc29sZSIsImxvZyIsImlkIiwiZW1pdCIsIm5ld25vdGUiLCJub3RlIiwicHVzaCIsIm5vdGVJZCIsImZpbHRlciIsImZpbmQiLCJ1cGRhdGVOb3RlIiwibWFwIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7OztBQUVBLElBQUlBLEtBQUssR0FBRyxFQUFaO0FBRUEsSUFBTUMsR0FBRyxHQUFHLDBCQUFaOztBQUNBLElBQU1DLE1BQU0sR0FBR0MsaUJBQUtDLFlBQUwsQ0FBa0JILEdBQWxCLENBQWY7O0FBQ0EsSUFBTUksRUFBRSxHQUFHLElBQUlDLGNBQUosQ0FBb0JKLE1BQXBCLENBQVgsQyxDQUVBO0FBQ0E7QUFDQTs7QUFDQUQsR0FBRyxDQUFDTSxHQUFKLENBQVFDLDhCQUFlQyxTQUFTLEdBQUcsU0FBM0IsQ0FBUjtBQUVBSixFQUFFLENBQUNLLEVBQUgsQ0FBTSxZQUFOLEVBQW9CLFVBQUNDLE1BQUQsRUFBWTtBQUM1QkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksbUJBQVosRUFBaUNGLE1BQU0sQ0FBQ0csRUFBeEM7QUFFQUgsRUFBQUEsTUFBTSxDQUFDSSxJQUFQLENBQVksa0JBQVosRUFBZ0NmLEtBQWhDO0FBRUFXLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLGdCQUFWLEVBQTRCLFVBQUFNLE9BQU8sRUFBSTtBQUNuQyxRQUFNQyxJQUFJLG1DQUFRRCxPQUFSO0FBQWlCRixNQUFBQSxFQUFFLEVBQUU7QUFBckIsTUFBVjs7QUFFQWQsSUFBQUEsS0FBSyxDQUFDa0IsSUFBTixDQUFXRCxJQUFYO0FBQ0FaLElBQUFBLEVBQUUsQ0FBQ1UsSUFBSCxDQUFRLGdCQUFSLEVBQTBCRSxJQUExQjtBQUNILEdBTEQ7QUFPQU4sRUFBQUEsTUFBTSxDQUFDRCxFQUFQLENBQVUsbUJBQVYsRUFBK0IsVUFBQ1MsTUFBRCxFQUFZO0FBQ3ZDbkIsSUFBQUEsS0FBSyxHQUFHQSxLQUFLLENBQUNvQixNQUFOLENBQWEsVUFBQ0gsSUFBRDtBQUFBLGFBQVVBLElBQUksQ0FBQ0gsRUFBTCxLQUFZSyxNQUF0QjtBQUFBLEtBQWIsQ0FBUjtBQUNBZCxJQUFBQSxFQUFFLENBQUNVLElBQUgsQ0FBUSxrQkFBUixFQUE0QmYsS0FBNUI7QUFDSCxHQUhEO0FBS0FXLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLGdCQUFWLEVBQTRCLFVBQUFTLE1BQU0sRUFBSTtBQUNsQyxRQUFNRixJQUFJLEdBQUdqQixLQUFLLENBQUNxQixJQUFOLENBQVcsVUFBQUosSUFBSTtBQUFBLGFBQUlBLElBQUksQ0FBQ0gsRUFBTCxLQUFZSyxNQUFoQjtBQUFBLEtBQWYsQ0FBYjtBQUNBUixJQUFBQSxNQUFNLENBQUNJLElBQVAsQ0FBWSxxQkFBWixFQUFtQ0UsSUFBbkM7QUFDSCxHQUhEO0FBTUFOLEVBQUFBLE1BQU0sQ0FBQ0QsRUFBUCxDQUFVLG1CQUFWLEVBQStCLFVBQUFZLFVBQVUsRUFBSTtBQUN6QztBQUNBdEIsSUFBQUEsS0FBSyxHQUFHQSxLQUFLLENBQUN1QixHQUFOLENBQVUsVUFBQU4sSUFBSSxFQUFJO0FBQ3RCLFVBQUlBLElBQUksQ0FBQ0gsRUFBTCxLQUFZUSxVQUFVLENBQUNSLEVBQTNCLEVBQStCO0FBQzNCRyxRQUFBQSxJQUFJLENBQUNPLEtBQUwsR0FBYUYsVUFBVSxDQUFDRSxLQUF4QjtBQUNBUCxRQUFBQSxJQUFJLENBQUNRLFdBQUwsR0FBbUJILFVBQVUsQ0FBQ0csV0FBOUI7QUFDSDs7QUFDRCxhQUFPUixJQUFQO0FBQ0gsS0FOTyxDQUFSO0FBT0FaLElBQUFBLEVBQUUsQ0FBQ1UsSUFBSCxDQUFRLGtCQUFSLEVBQTRCZixLQUE1QjtBQUNILEdBVkQ7QUFXSCxDQWxDRCxFLENBcUNBOztBQUNBRSxNQUFNLENBQUN3QixNQUFQLENBQWMsSUFBZDtBQUNBZCxPQUFPLENBQUNDLEdBQVIsQ0FBWSxnQkFBWixFQUE4QixJQUE5QiIsInNvdXJjZVJvb3QiOiJDOlxceGFtcHBcXGh0ZG9jc1xcY3J1ZC1zb2NrZXRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XHJcbmltcG9ydCB7IFNlcnZlciBhcyB3ZWJTb2NrZXRTZXJ2ZXIgfSBmcm9tIFwic29ja2V0LmlvXCI7XHJcbmltcG9ydCBodHRwIGZyb20gJ2h0dHAnXHJcbmltcG9ydCB7IHY0IGFzIHV1aWQgfSBmcm9tIFwidXVpZFwiO1xyXG5cclxubGV0IG5vdGVzID0gW107XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKClcclxuY29uc3Qgc2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKVxyXG5jb25zdCBpbyA9IG5ldyB3ZWJTb2NrZXRTZXJ2ZXIoc2VydmVyKVxyXG5cclxuLy8gYXBwLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xyXG4vLyAgICAgcmVzLnNlbmQoJ2hvbGEgbXVuZG9kZGQnKVxyXG4vLyB9KVxyXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKF9fZGlybmFtZSArICcvcHVibGljJykpXHJcblxyXG5pby5vbignY29ubmVjdGlvbicsIChzb2NrZXQpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdudWV2YSBjb25leGlvbiA6ICcsIHNvY2tldC5pZCk7XHJcblxyXG4gICAgc29ja2V0LmVtaXQoJ3NlcnZlcjpsb2Fkbm90ZXMnLCBub3RlcylcclxuXHJcbiAgICBzb2NrZXQub24oJ2NsaWVudDpuZXdub3RlJywgbmV3bm90ZSA9PiB7XHJcbiAgICAgICAgY29uc3Qgbm90ZSA9IHsgLi4ubmV3bm90ZSwgaWQ6IHV1aWQoKSB9XHJcblxyXG4gICAgICAgIG5vdGVzLnB1c2gobm90ZSk7XHJcbiAgICAgICAgaW8uZW1pdCgnc2VydmVyOm5ld25vdGUnLCBub3RlKVxyXG4gICAgfSk7XHJcblxyXG4gICAgc29ja2V0Lm9uKCdjbGllbnQ6ZGVsZXRlbm90ZScsIChub3RlSWQpID0+IHtcclxuICAgICAgICBub3RlcyA9IG5vdGVzLmZpbHRlcigobm90ZSkgPT4gbm90ZS5pZCAhPT0gbm90ZUlkKTtcclxuICAgICAgICBpby5lbWl0KCdzZXJ2ZXI6bG9hZG5vdGVzJywgbm90ZXMpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgc29ja2V0Lm9uKCdjbGllbnQ6Z2V0bm90ZScsIG5vdGVJZCA9PiB7XHJcbiAgICAgICAgY29uc3Qgbm90ZSA9IG5vdGVzLmZpbmQobm90ZSA9PiBub3RlLmlkID09PSBub3RlSWQpO1xyXG4gICAgICAgIHNvY2tldC5lbWl0KCdzZXJ2ZXI6c2VsZWN0ZWROb3RlJywgbm90ZSk7XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgc29ja2V0Lm9uKCdjbGllbnQ6dXBkYXRlTm90ZScsIHVwZGF0ZU5vdGUgPT4ge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKG5vdGUpO1xyXG4gICAgICAgIG5vdGVzID0gbm90ZXMubWFwKG5vdGUgPT4ge1xyXG4gICAgICAgICAgICBpZiAobm90ZS5pZCA9PT0gdXBkYXRlTm90ZS5pZCkge1xyXG4gICAgICAgICAgICAgICAgbm90ZS50aXRsZSA9IHVwZGF0ZU5vdGUudGl0bGU7XHJcbiAgICAgICAgICAgICAgICBub3RlLmRlc2NyaXB0aW9uID0gdXBkYXRlTm90ZS5kZXNjcmlwdGlvbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gbm90ZVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlvLmVtaXQoJ3NlcnZlcjpsb2Fkbm90ZXMnLCBub3Rlcyk7XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG5cclxuLy8gYXBwLmxpc3RlbigzMDAwKVxyXG5zZXJ2ZXIubGlzdGVuKDMwMDApXHJcbmNvbnNvbGUubG9nKCdzZXJ2ZXIgb24gcG9ydCcsIDMwMDApOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "notes",
        "app",
        "server",
        "http",
        "createServer",
        "io",
        "webSocketServer",
        "use",
        "express",
        "__dirname",
        "on",
        "socket",
        "console",
        "log",
        "id",
        "emit",
        "newnote",
        "note",
        "push",
        "noteId",
        "filter",
        "find",
        "updateNote",
        "map",
        "title",
        "description",
        "listen"
      ],
      "mappings": ";;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA,IAAIA,KAAK,GAAG,EAAZ;AAEA,IAAMC,GAAG,GAAG,0BAAZ;;AACA,IAAMC,MAAM,GAAGC,iBAAKC,YAAL,CAAkBH,GAAlB,CAAf;;AACA,IAAMI,EAAE,GAAG,IAAIC,cAAJ,CAAoBJ,MAApB,CAAX,C,CAEA;AACA;AACA;;AACAD,GAAG,CAACM,GAAJ,CAAQC,8BAAeC,SAAS,GAAG,SAA3B,CAAR;AAEAJ,EAAE,CAACK,EAAH,CAAM,YAAN,EAAoB,UAACC,MAAD,EAAY;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,MAAM,CAACG,EAAxC;AAEAH,EAAAA,MAAM,CAACI,IAAP,CAAY,kBAAZ,EAAgCf,KAAhC;AAEAW,EAAAA,MAAM,CAACD,EAAP,CAAU,gBAAV,EAA4B,UAAAM,OAAO,EAAI;AACnC,QAAMC,IAAI,mCAAQD,OAAR;AAAiBF,MAAAA,EAAE,EAAE;AAArB,MAAV;;AAEAd,IAAAA,KAAK,CAACkB,IAAN,CAAWD,IAAX;AACAZ,IAAAA,EAAE,CAACU,IAAH,CAAQ,gBAAR,EAA0BE,IAA1B;AACH,GALD;AAOAN,EAAAA,MAAM,CAACD,EAAP,CAAU,mBAAV,EAA+B,UAACS,MAAD,EAAY;AACvCnB,IAAAA,KAAK,GAAGA,KAAK,CAACoB,MAAN,CAAa,UAACH,IAAD;AAAA,aAAUA,IAAI,CAACH,EAAL,KAAYK,MAAtB;AAAA,KAAb,CAAR;AACAd,IAAAA,EAAE,CAACU,IAAH,CAAQ,kBAAR,EAA4Bf,KAA5B;AACH,GAHD;AAKAW,EAAAA,MAAM,CAACD,EAAP,CAAU,gBAAV,EAA4B,UAAAS,MAAM,EAAI;AAClC,QAAMF,IAAI,GAAGjB,KAAK,CAACqB,IAAN,CAAW,UAAAJ,IAAI;AAAA,aAAIA,IAAI,CAACH,EAAL,KAAYK,MAAhB;AAAA,KAAf,CAAb;AACAR,IAAAA,MAAM,CAACI,IAAP,CAAY,qBAAZ,EAAmCE,IAAnC;AACH,GAHD;AAMAN,EAAAA,MAAM,CAACD,EAAP,CAAU,mBAAV,EAA+B,UAAAY,UAAU,EAAI;AACzC;AACAtB,IAAAA,KAAK,GAAGA,KAAK,CAACuB,GAAN,CAAU,UAAAN,IAAI,EAAI;AACtB,UAAIA,IAAI,CAACH,EAAL,KAAYQ,UAAU,CAACR,EAA3B,EAA+B;AAC3BG,QAAAA,IAAI,CAACO,KAAL,GAAaF,UAAU,CAACE,KAAxB;AACAP,QAAAA,IAAI,CAACQ,WAAL,GAAmBH,UAAU,CAACG,WAA9B;AACH;;AACD,aAAOR,IAAP;AACH,KANO,CAAR;AAOAZ,IAAAA,EAAE,CAACU,IAAH,CAAQ,kBAAR,EAA4Bf,KAA5B;AACH,GAVD;AAWH,CAlCD,E,CAqCA;;AACAE,MAAM,CAACwB,MAAP,CAAc,IAAd;AACAd,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,IAA9B",
      "sourceRoot": "C:\\xampp\\htdocs\\crud-socket\\src\\",
      "sourcesContent": [
        "\r\nimport express from \"express\";\r\nimport { Server as webSocketServer } from \"socket.io\";\r\nimport http from 'http'\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nlet notes = [];\r\n\r\nconst app = express()\r\nconst server = http.createServer(app)\r\nconst io = new webSocketServer(server)\r\n\r\n// app.get('/', (req, res) => {\r\n//     res.send('hola mundoddd')\r\n// })\r\napp.use(express.static(__dirname + '/public'))\r\n\r\nio.on('connection', (socket) => {\r\n    console.log('nueva conexion : ', socket.id);\r\n\r\n    socket.emit('server:loadnotes', notes)\r\n\r\n    socket.on('client:newnote', newnote => {\r\n        const note = { ...newnote, id: uuid() }\r\n\r\n        notes.push(note);\r\n        io.emit('server:newnote', note)\r\n    });\r\n\r\n    socket.on('client:deletenote', (noteId) => {\r\n        notes = notes.filter((note) => note.id !== noteId);\r\n        io.emit('server:loadnotes', notes);\r\n    });\r\n\r\n    socket.on('client:getnote', noteId => {\r\n        const note = notes.find(note => note.id === noteId);\r\n        socket.emit('server:selectedNote', note);\r\n    });\r\n\r\n\r\n    socket.on('client:updateNote', updateNote => {\r\n        // console.log(note);\r\n        notes = notes.map(note => {\r\n            if (note.id === updateNote.id) {\r\n                note.title = updateNote.title;\r\n                note.description = updateNote.description;\r\n            }\r\n            return note\r\n        });\r\n        io.emit('server:loadnotes', notes);\r\n    });\r\n});\r\n\r\n\r\n// app.listen(3000)\r\nserver.listen(3000)\r\nconsole.log('server on port', 3000);"
      ]
    },
    "sourceType": "script",
    "mtime": 1647820018092
  }
}